{
  "name": "semgrep",
  "displayName": "Semgrep",
  "description": "Security scans in a snap. Speedy SAST with a powerful rule registry for seamless detection and remediation of code vulnerabilities with each save.",
  "version": "1.3.0",
  "engines": {
    "vscode": "^1.66.0"
  },
  "categories": [
    "Linters"
  ],
  "keywords": [
    "lint",
    "linter",
    "validation",
    "check",
    "semgrep"
  ],
  "activationEvents": [
    "*"
  ],
  "publisher": "Semgrep",
  "repository": "https://github.com/returntocorp/semgrep-vscode",
  "icon": "semgrep-icon.png",
  "galleryBanner": {
    "color": "#ffffff",
    "theme": "light"
  },
  "qna": "https://r2c.dev/slack",
  "main": "./out/src/extension.js",
  "contributes": {
    "icons": {
      "semgrep-icon": {
        "description": "Semgrep Logo",
        "default": {
          "fontPath": "./semgrep-icon.woff",
          "fontCharacter": "A"
        }
      }
    },
    "commands": [
      {
        "command": "semgrep.scanWorkspace",
        "title": "Semgrep: Scan changed files in workspace"
      },
      {
        "command": "semgrep.scanWorkspaceFull",
        "title": "Semgrep: Scan all files in workspace"
      },
      {
        "command": "semgrep.login",
        "title": "Semgrep: Sign in"
      },
      {
        "command": "semgrep.logout",
        "title": "Semgrep: Sign out"
      },
      {
        "command": "semgrep.refreshRules",
        "title": "Semgrep: Update rules"
      },
      {
        "command": "semgrep.search",
        "title": "Semgrep: Search by pattern",
        "icon": "$(search-view-icon)",
        "when": "semgrep.cli.minor >= 25 || config.semgrep.ignoreCliVersion"
      },
      {
        "command": "semgrep.search.refresh",
        "title": "Semgrep Search: Refresh",
        "icon": "$(search-refresh)",
        "when": "semgrep.cli.minor >= 25 || config.semgrep.ignoreCliVersion"
      },
      {
        "command": "semgrep.search.clear",
        "title": "Semgrep Search: Clear",
        "icon": "$(search-remove)",
        "when": "semgrep.cli.minor >= 25 || config.semgrep.ignoreCliVersion"
      }
    ],
    "configuration": {
      "title": "Semgrep",
      "properties": {
        "semgrep.trace.server": {
          "scope": "window",
          "type": "string",
          "enum": [
            "off",
            "messages",
            "verbose"
          ],
          "default": "off",
          "description": "Traces the communication between VS Code and the language server."
        },
        "semgrep.path": {
          "type": "string",
          "default": "semgrep"
        },
        "semgrep.ignoreCliVersion": {
          "type": "boolean",
          "default": false,
          "description": "Ignore CLI Version, and enable all extension features (Warning: this is mainly for extension development, and can break things if enabled!)"
        },
        "semgrep.scan.configuration": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [],
          "description": "Each item can be a YAML configuration file, directory of YAML files ending in .yml | .yaml, URL of a configuration file, or Semgrep registry entry name. Use \"auto\" to automatically obtain rules tailored to this project; your project URL will be used to log in to the Semgrep registry."
        },
        "semgrep.scan.exclude": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [],
          "description": "List of files or directories to exclude."
        },
        "semgrep.scan.include": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [],
          "description": "List of files or directories to include."
        },
        "semgrep.scan.jobs": {
          "type": "integer",
          "default": 1,
          "description": "Number of parallel jobs to run."
        },
        "semgrep.scan.maxMemory": {
          "type": "integer",
          "default": 0,
          "description": "Maximum memory to use in megabytes."
        },
        "semgrep.scan.maxTargetBytes": {
          "type": "integer",
          "default": 1000000,
          "description": "Maximum size of target in bytes to scan."
        },
        "semgrep.scan.timeout": {
          "type": "integer",
          "default": 30,
          "description": "Maximum time to scan in seconds."
        },
        "semgrep.scan.timeoutThreshold": {
          "type": "integer",
          "default": 3,
          "description": "Maximum number of rules that can timeout on a file before the file is skipped. If set to 0 will not have limit. Defaults to 3."
        },
        "semgrep.scan.onlyGitDirty": {
          "type": "boolean",
          "default": true,
          "description": "Only scan lines changed since the last commit"
        },
        "semgrep.metrics.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable or disable metrics collection."
        }
      }
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "semgrep-sidebar",
          "title": "Semgrep Search",
          "icon": "semgrep-icon-basic.png"
        }
      ]
    },
    "views": {
      "semgrep-sidebar": [
        {
          "id": "semgrep-search-results",
          "name": "Search Results",
          "when": "semgrep.cli.minor >= 25 || config.semgrep.ignoreCliVersion"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "semgrep-search-results",
        "contents": "[$(search-view-icon) Search By Pattern](command:semgrep.search)"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "semgrep.search.clear",
          "when": "view == semgrep-search-results && semgrep.searchHasResults",
          "group": "navigation"
        },
        {
          "command": "semgrep.search.refresh",
          "when": "view == semgrep-search-results && semgrep.searchHasResults",
          "group": "navigation"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "lint": "eslint src --ext ts",
    "watch": "tsc -w -p ./",
    "pretest": "npm run compile && npm run lint",
    "test": "node ./out/src/test/runTest.js",
    "clean": "rm -rf ./out"
  },
  "devDependencies": {
    "@types/glob": "^7.1.3",
    "@types/mocha": "^9.1.1",
    "@types/node": "^14.0.27",
    "@types/semver": "^7.3.13",
    "@types/vscode": "1.66.0",
    "@types/which": "^2.0.1",
    "@typescript-eslint/eslint-plugin": "^3.8.0",
    "@typescript-eslint/parser": "^3.8.0",
    "@vscode/test-electron": "^2.1.3",
    "eslint": "^7.6.0",
    "glob": "^7.1.6",
    "mocha": "^9.1.4",
    "typescript": "^4.7.4"
  },
  "dependencies": {
    "@types/node-fetch": "^2.5.7",
    "lint-staged": "^13.0.3",
    "node-fetch": "^2.6.0",
    "semver": "^7.5.0",
    "vscode-jsonrpc": "^6.0.0",
    "vscode-languageclient": "^8.0.1",
    "which": "^2.0.2"
  }
}
